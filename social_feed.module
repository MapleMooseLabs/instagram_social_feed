<?php

/**
 * @file
 * Defines all hooks and helper functions.
 */

/**
* Implementation of hook_menu()
*/
function social_feed_menu() {

  $items['admin/config/services/social_feed'] = array(
    'title' => 'Social Aggregator',
    'description' => 'Approve new items for site display',
    'page callback' => 'social_overview',
    'access arguments' => array('access administration pages'),
    'type' => MENU_NORMAL_ITEM,
  );

  $items['admin/config/services/social_feed/settings'] = array(
    'title' => 'Manage settings',
    'type' => MENU_LOCAL_TASK,
    'page callback' => 'drupal_get_form',
    'page arguments' => array('social_feed_settings'),
    'access arguments' => array('administer social_feed settings'),
  );

  $items['ajax/social_approve'] = array(
    'title' => 'Social Approve',
    'page callback' => 'social_feed_approve',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Implements hook_permissions().
 */
function social_feed_permission() {
  return array(
    'administer social_feed settings' => array(
      'title' => t('Administer Social Feed module settings'),
    ),
  );
}

function social_overview() {

  global $user;
  if (user_access('administer social_feed settings') != TRUE) {
    drupal_access_denied();
    exit();
  }

  drupal_add_js(drupal_get_path('module', 'social_feed') . '/js/social_feed.js');

  $sql = "SELECT * from social_instagram ORDER BY instagram_id DESC";
  $result = db_query($sql);

  $header = array('Thumbnail', 'User', 'Caption', 'Timestamp', 'Publish?');

  $rows = array();
  foreach($result as $row) {

    $image_html = '<img src="' . $row->thumbnail . '" data-approved="' . $row->approve . '" />';

    $rows[] = array(
      l($image_html, $row->instagram_link, array('html' => TRUE, 'attributes' => array('target'=>'_blank'))),
      $row->instagram_user,
      $row->caption,
      date('Y-m-d g:i a', $row->time),
      $row->instagram_id,
    );
  }

  $variables = array(
    'header' => $header,
    'rows' => $rows,
    'attributes' => array(),
    'caption' => 'Instagram Photos',
    'colgroups' => array(),
    'sticky' => FALSE,
    'empty' => 'No photos yet',
  );
  return theme_table($variables);

}

function social_feed_approve($id) {

  $table = "";
  $column = "";

  if (isset($_GET['instagram_id'])) {
    $id = $_GET['instagram_id'];
    $table = "social_instagram";
    $column = "instagram_id";
  }
  else {
    header("HTTP/1.1 500 Internal Server Error");
    exit();
  }

  $result = db_update($table)
    ->expression(
      'approve', 'IF(approve=1, 0, 1)'
    )
    ->condition(
      $column, $id
    )
    ->execute();

}

function social_feed_admin() {

  social_overview();
  $output = ob_get_clean();
  $form = array();

  $form['iframecontent'] = array(
  '#markup' => $output,
  );

  $form = system_settings_form($form);

  unset($form['#submit']);
  unset($form['actions']);

  return $form;

}

function stripslashes_deep($value) {
  $value = is_array($value) ?
    array_map('stripslashes_deep', $value) :
    stripslashes($value);

  return $value;
}

//Take input POST value and run against array. If there is a match
//between value and input the array key will be returned
function input_filter($input, $filter_array){
echo "Input Filter, input: $input\n";
  foreach ($filter_array as $key=>$value){
    echo "Key: $key, Value: $value\n";
    if($input == $key){
      echo "Found key $key\n";
      //return key of filter array that matches input
      return $key;
    }
  }
}

//Enter query to make CURL request to API
function api_call($query){
  $curl = curl_init();
  curl_setopt($curl, CURLOPT_URL, $query);
  curl_setopt($curl, CURLOPT_RETURNTRANSFER, 1);
  curl_setopt($curl, CURLOPT_SSL_VERIFYPEER, false);
  curl_setopt($curl, CURLOPT_TIMEOUT, 20);
  $result= curl_exec($curl);
  curl_close($curl);

  return $result;
}

function social_feed_cron() {

  $access_token = variable_get('social_feed_api_key', '30805250.1fb234f.27a3c29a8e8545caa31a7be52462c2fa');

  $tag = variable_get('social_feed_search_tag');

  $table = 'social_instagram';
  $instagram_query = "https://api.instagram.com/v1/tags/$tag/media/recent?access_token=$access_token";

  $instagram_feed = json_decode(api_call($instagram_query));

   echo "<pre style='font-size:14px;'>";
   var_dump($instagram_feed);
   echo "</pre>";

   foreach($instagram_feed->data as $feed){
     //Check if instagram photo already exists based on unix timestamp
     $sql = "SELECT instagram_id FROM {$table} WHERE instagram_id = '{$feed->id}'";
     $result = db_query($sql);
     $count = $result->rowCount();

     //Comma deliminate hashtag array and return as string
     $tags = implode(",", $feed->tags);

      //If no duplicate time entries proceed
      if($count < 1){
        $data = array(
          'user_id' => $feed->user->id,
          'tags' => $tags,
          //Time stored in unix epoch format
          'time'=>$feed->created_time,
          'low_resolution' => $feed->images->low_resolution->url,
          'thumbnail' => $feed->images->thumbnail->url,
          'standard_resolution' => $feed->images->standard_resolution->url,
          'caption' => utf8_encode($feed->caption->text),
          'instagram_id' => $feed->id,
          'instagram_link' => $feed->link,
          'instagram_user' => $feed->user->username,
          'approve' => variable_get('social_feed_auto_publish'),
        );

        //Insert data into table
        $result = db_insert($table)->fields($data)->execute();

        $post = array(
          'post_author'    => 1,
          'post_content'   => $data['caption'],
          'post_name'      => 'instagram_'.$data->time,
          'post_parent'    => 0,
          'post_status'    => 'publish',
          'post_title'     => $data['caption'],
          'post_type'      => 'instagram'
        );
      }
   }
}

/**
 * Callback function for providing settings form
 * to edit recipients of email alerts.
 */
function social_feed_settings() {

  $form = array();
  $form['fieldname'] = array(
    '#markup' => "Paste the Instagram API access key here:",
  );
  $form['social_feed_api_key'] = array(
    '#type' => 'textfield',
    '#title' => t('Instagram API Key'),
    '#default_value' => variable_get('social_feed_api_key', ''),
    '#size' => 60,
    '#maxlength' => 255,
  );
  $form['social_feed_auto_publish'] = array(
    '#type' => 'checkbox',
    '#title' => t('Auto-publish new photos'),
    '#default_value' => variable_get('social_feed_auto_publish', ''),
  );
  $form['social_feed_search_user'] = array(
    '#type' => 'textfield',
    '#title' => t('User account to poll'),
    '#default_value' => variable_get('social_feed_search_user', ''),
    '#size' => 60,
    '#maxlength' => 255,
  );
  $form['social_feed_search_tag'] = array(
    '#type' => 'textfield',
    '#title' => t('Hashtag to search'),
    '#default_value' => variable_get('social_feed_search_tag', ''),
    '#size' => 60,
    '#maxlength' => 255,
  );

  return system_settings_form($form);

}
